import { PdfReader } from "pdfreader"

export const pdf = async (buffer: Buffer): Promise<string> => {
  const text: string[] = []

  return new Promise((resolve, reject) => {
    const reader = new PdfReader()

    reader.parseBuffer(buffer, (error, item) => {
      if (error) reject(error)
      else if (!item) resolve(text.join(" "))
      else if (item.text) text.push(item.text)
    })
  })
}

const STOPWORDS = new Set([
  "a",
  "an",
  "and",
  "are",
  "as",
  "at",
  "be",
  "been",
  "by",
  "for",
  "from",
  "has",
  "he",
  "in",
  "is",
  "it",
  "its",
  "of",
  "on",
  "that",
  "the",
  "to",
  "was",
  "will",
  "with",
  "you",
  "your",
  "this",
  "these",
  "they",
  "we",
  "or",
  "but",
  "so",
  "if",
  "can",
  "could",
  "would",
  "should",
  "may",
  "might",
  "have",
  "had",
  "do",
  "does",
  "did",
  "who",
  "what",
  "where",
  "when",
  "why",
  "how",
  "which",
  "than",
  "over",
  "under",
  "up",
  "down",
  "out",
  "off",
  "on",
  "into",
  "onto",
  "upon",
  "about",
  "above",
  "across",
  "after",
  "against",
  "along",
  "among",
  "around",
  "before",
  "behind",
  "below",
  "beneath",
  "beside",
  "between",
  "beyond",
  "during",
  "except",
  "inside",
  "outside",
  "through",
  "throughout",
  "until",
  "within",
  "without",
  "i",
  "me",
  "my",
  "myself",
  "we",
  "us",
  "our",
  "ours",
  "ourselves",
  "you",
  "your",
  "yours",
  "yourself",
  "yourselves",
  "he",
  "him",
  "his",
  "himself",
  "she",
  "her",
  "hers",
  "herself",
  "it",
  "its",
  "itself",
  "they",
  "them",
  "their",
  "theirs",
  "themselves",
  "am",
  "is",
  "are",
  "was",
  "were",
  "being",
  "been",
  "have",
  "has",
  "had",
  "having",
  "do",
  "does",
  "did",
  "doing",
  "will",
  "would",
  "could",
  "should",
  "may",
  "might",
  "must",
  "shall",
  "can",
])

export const cleanup = (text: string): string => {
  return text
    .toLowerCase()
    .split(/[\s\.,;:!\?]+/)
    .filter((word) => word.length > 1 && !STOPWORDS.has(word))
    .join(" ")
    .trim()
}

export const description = (description: string): string => {
  return description
    .replace(/[\n\r\t]+/g, " ")
    .replace(/\s+/g, " ")
    .trim()
}
